# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/
image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  before_script:
    - apt-get update -qq
    - apt-get -y install clang-3.9
    - apt-get -y install libace-dev
    - apt-get -y install libncurses5-dev
    - apt-get -y install build-essential autoconf libtool make cmake git-core g++
    - apt-get -y install lua5.2 liblua5.2 liblua5.2-dev
    - apt-get -y install openssl libssl-dev libmysqlclient15-dev libmysql++-dev libreadline6-dev zlib1g-dev libbz2-dev
  script: 
    - mkdir build
    - cd build
    - cmake ..
    - make -j8
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"